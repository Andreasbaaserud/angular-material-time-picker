!function(a,b,c){"use strict";function d(a,b,c,d){var e=parseInt(a);return isNaN(e)||e===c?e=b:e++,"MM"===d?f(e):String(e)}function e(a,b,c,d){var e=parseInt(a);return isNaN(e)||e===b?e=c:e--,"MM"===d?f(e):String(e)}function f(a){return a<10?"0"+String(a):String(a)}function g(a,b,c,d){var e=parseInt(a);if("HH"!==d||0!==e)return e>b?String(e)[0]:isNaN(e)?void 0:2===a.length||c&&"MM"===d?f(e):String(e)}function h(a,b,c,d,e,g){var h=this;this.time=new Date(c.getTime()),this.noMeridiem=d,d||(this.meridiem=c.getHours()<12?"AM":"PM"),this.VIEW_HOURS=1,this.VIEW_MINUTES=2,this.currentView=this.VIEW_HOURS,this.autoSwitch=!!e,a.$mdMedia=g,this.switchView=function(){h.currentView=h.currentView==h.VIEW_HOURS?h.VIEW_MINUTES:h.VIEW_HOURS},this.hours=function(){var a=h.time.getHours();return d?a:a>12?a-12:0===a?12:a},this.minutes=function(){return f(h.time.getMinutes())},this.setAM=function(){var a=h.time.getHours();a>=12&&(h.time.setHours(a-12),h.meridiem="AM")},this.setPM=function(){var a=h.time.getHours();a<12&&(h.time.setHours(a+12),h.meridiem="PM")},this.cancel=function(){b.cancel()},this.confirm=function(){b.hide(this.time)}}function i(a){var b="hours",c="minutes",d=this;this.noMeridiem=a.$parent.timepicker.noMeridiem,this.STEP_DEG=this.noMeridiem?15:30,this.STEP_DEG_MINUTES=30,this.steps=[],this.CLOCK_TYPES={hours:{range:this.noMeridiem?24:12},minutes:{range:60}},this.getPointerStyle=function(){var a=1;switch(d.type){case b:a=d.noMeridiem?24:12;break;case c:a=60}var e=Math.round(d.selected*(360/a))-180;return{"-webkit-transform":"rotate("+e+"deg)","-ms-transform":"rotate("+e+"deg)",transform:"rotate("+e+"deg)"}},this.setTimeByDeg=function(a){var e=0;switch(d.type){case b:e=d.noMeridiem?24:12;break;case c:e=60}var f=Math.round(e/360*a);d.noMeridiem||"hours"!==d.type||0!==f?"minutes"===d.type&&60===f&&(f=0):f=12,d.setTime(f)},this.setTime=function(a){switch(this.selected=a,d.type){case b:if(!d.noMeridiem){var e=this.time.getHours()>=12;e&&12!=a?a+=12:e||12!==a||(a=0)}this.time.setHours(a);break;case c:this.time.setMinutes(a)}},this.init=function(){switch(d.type=d.type||"hours",d.type){case b:if(d.noMeridiem){for(var a=1;a<=23;a++)d.steps.push(a);d.steps.push(0),d.selected=d.time.getHours()||0}else{for(var a=1;a<=12;a++)d.steps.push(a);d.selected=d.time.getHours()||0,d.selected>12&&(d.selected-=12)}break;case c:for(var a=5;a<=55;a+=5)d.steps.push(a);d.steps.push(0),d.selected=d.time.getMinutes()||0}},this.init()}b.module("md.time.picker",["ngMessages"]).directive("mdHoursMinutes",function(){return{restrict:"E",scope:{type:"@",message:"@",ngModel:"="},template:'<md-input-container md-no-float><input required type="text"name="time_{{type}}"ng-model="time[type]"ng-change="handleInput()"placeholder="{{type}}"maxlength="2"ng-blur="handleInput(true)"ng-keydown="handleKeypress($event)"/><span class="md-up-arrow" aria-hidden="true" ng-click="increase()"></span><span class="md-down-arrow" aria-hidden="true" ng-click="decrease()"></span><div class="time-error-messages" ng-messages="$parent.timeForm[\'time_\' + type].$error" role="alert"><div ng-message="required">{{message}}</div></div></md-input-container>',controller:["$scope",function(a){function b(){if("HH"===a.type){var b=a.$parent.ngModel.getHours();a.$parent.noMeridiem||(b>12?b-=12:0===b&&(b+=12)),a.time.HH=String(b)}else a.time.MM=f(a.$parent.ngModel.getMinutes())}function h(b){"HH"===a.type?a.ngModel.setHours(b):a.ngModel.setMinutes(b)}"HH"===a.type?a.$parent.noMeridiem?(a.min=0,a.max=23):(a.min=1,a.max=12):(a.min=0,a.max=59),a.time={},b();var c=a.$on("mdpTimeUpdated",b);a.$on("$destroy",c),a.increase=function(){var b=d(a.time[a.type],a.min,a.max,a.type);a.time[a.type]=b,h(parseInt(b))},a.decrease=function(){var b=e(a.time[a.type],a.min,a.max,a.type);a.time[a.type]=b,h(parseInt(b))},a.handleInput=function(b){a.time[a.type]=g(a.time[a.type],a.max,b,a.type)},a.handleKeypress=function(b){38===b.keyCode?a.increase():40===b.keyCode&&a.decrease()}}]}}).directive("mdMeridiem",function(){return{restrict:"E",scope:{message:"@"},template:'<md-input-container md-no-float><md-select required name="meridiem"ng-model="meridiem"ng-change="updateTime()"placeholder="AM/PM"flex-gt-sm><md-option value="AM">AM</md-option><md-option value="PM">PM</md-option></md-select><div class="time-error-messages" ng-messages="$parent.timeForm.meridiem.$error" role="alert"><div ng-message="required">{{message}}</div></div></md-input-container>',controller:["$scope",function(a){function b(){var b=a.$parent.$parent.ngModel.getHours();a.meridiem=b>=0&&b<12?"AM":"PM"}b(),a.updateTime=function(){var b=a.$parent.$parent.ngModel.getHours();"AM"===a.meridiem?a.$parent.$parent.ngModel.setHours(b-12):a.$parent.$parent.ngModel.setHours(b+12)};var c=a.$on("mdpTimeUpdated",b);a.$on("$destroy",c)}]}}).directive("mdTimePicker",function(){return{restrict:"E",scope:{message:"<",ngModel:"="},template:'<form name="timeForm"><button class="md-icon-button md-button md-ink-ripple" type="button" ng-click="showPicker($event)"><md-icon><i class="material-icons">&#xE192;</i></md-icon><div class="md-ripple-container"></div></button><md-hours-minutes type="HH" ng-model="ngModel" message="{{message.hour}}"></md-hours-minutes><span class="time-colon">:</span><md-hours-minutes type="MM" ng-model="ngModel" message="{{message.minute}}"></md-hours-minutes><md-meridiem ng-if="!noMeridiem" message="{{message.meridiem}}"></md-meridiem></form>',controller:["$scope","$mdpTimePicker","$attrs",function(a,c,d){if(!b.isDate(a.ngModel))throw"ng-model must be initialized as a date object";a.showPicker=function(b){c(a.ngModel,a.noMeridiem,{targetEvent:b,autoSwitch:!a.noAutoSwitch}).then(function(b){a.ngModel=new Date(b.getTime()),a.$broadcast("mdpTimeUpdated")})}}],compile:function(a,b){return{pre:function(c){c.noMeridiem=""===b.noMeridiem,c.noAutoSwitch=""===b.noAutoSwitch}}}}}).provider("$mdpTimePicker",function(){var a="OK",b="Cancel";this.setOKButtonLabel=function(b){a=b},this.setCancelButtonLabel=function(a){b=a},this.$get=["$mdDialog",function(c){return function(d,e,f){return c.show({controller:["$scope","$mdDialog","time","noMeridiem","autoSwitch","$mdMedia",h],controllerAs:"timepicker",clickOutsideToClose:!0,template:'<md-dialog aria-label="" class="mdp-timepicker" ng-class="{ \'portrait\': !$mdMedia(\'gt-xs\') }"><md-dialog-content layout-gt-xs="row" layout-wrap><md-toolbar layout-gt-xs="column" layout-xs="row" layout-align="center center" flex class="mdp-timepicker-time md-hue-1 md-primary"><div class="mdp-timepicker-selected-time"><span ng-class="{ \'active\': timepicker.currentView == timepicker.VIEW_HOURS }" ng-click="timepicker.currentView = timepicker.VIEW_HOURS">{{ timepicker.hours() }}</span>:<span ng-class="{ \'active\': timepicker.currentView == timepicker.VIEW_MINUTES }" ng-click="timepicker.currentView = timepicker.VIEW_MINUTES">{{ timepicker.minutes() }}</span></div><div layout="column" class="mdp-timepicker-selected-ampm"><span ng-if="timepicker.meridiem" ng-click="timepicker.setAM()" ng-class="{ \'active\': timepicker.meridiem === \'AM\' }">AM</span><span ng-if="timepicker.meridiem" ng-click="timepicker.setPM()" ng-class="{ \'active\': timepicker.meridiem === \'PM\' }">PM</span></div></md-toolbar><div><div class="mdp-clock-switch-container" ng-switch="timepicker.currentView" layout layout-align="center center"><mdp-clock class="mdp-animation-zoom" auto-switch="timepicker.autoSwitch" time="timepicker.time" no-meridiem="noMeridiem" type="hours" ng-switch-when="1"></mdp-clock><mdp-clock class="mdp-animation-zoom" auto-switch="timepicker.autoSwitch" time="timepicker.time" type="minutes" ng-switch-when="2"></mdp-clock></div><md-dialog-actions layout="row"><span flex></span><md-button ng-click="timepicker.cancel()" aria-label="'+b+'">'+b+'</md-button><md-button ng-click="timepicker.confirm()" class="md-primary" aria-label="'+a+'">'+a+"</md-button></md-dialog-actions></div></md-dialog-content></md-dialog>",targetEvent:f.targetEvent,locals:{time:d,noMeridiem:e,autoSwitch:f.autoSwitch},skipHide:!0})}}]}).directive("mdpClock",["$animate","$timeout",function(a,c){return{restrict:"E",bindToController:{type:"@?",time:"=",autoSwitch:"=?"},replace:!0,template:'<div class="mdp-clock"><div class="mdp-clock-container"><md-toolbar class="mdp-clock-center md-primary"></md-toolbar><md-toolbar ng-style="clock.getPointerStyle()" class="mdp-pointer md-primary"><span class="mdp-clock-selected md-button md-raised md-primary"></span></md-toolbar><md-button ng-if="clock.type === \'minutes\'" ng-class="{ \'md-primary\': clock.selected == step }" class="md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG_MINUTES * ($index + 1)) }}" ng-repeat="step in clock.steps">{{ step }}</md-button><md-button ng-if="clock.type !== \'minutes\'" ng-class="{ \'md-primary\': clock.selected == step }" class="md-icon-button md-raised mdp-clock-deg{{ ::(clock.STEP_DEG * ($index + 1)) }}" ng-repeat="step in clock.steps">{{ step }}</md-button></div></div>',controller:["$scope",i],controllerAs:"clock",link:function(a,d,e,f){var h=(b.element(d[0].querySelector(".mdp-pointer")),a.$parent.timepicker),i=function(a){var b=a.currentTarget.getClientRects()[0],d=a.currentTarget.offsetWidth/2-(a.pageX-b.left),e=a.pageY-b.top-a.currentTarget.offsetHeight/2,g=Math.round(Math.atan2(d,e)*(180/Math.PI));c(function(){f.setTimeByDeg(g+180),"hours"===f.type&&f.autoSwitch&&h.switchView()})};d.on("click",i),a.$on("$destroy",function(){d.off("click",i)})}}}])}(window,angular);